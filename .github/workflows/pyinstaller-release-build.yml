name: Build & Release PySide6 App

on:
  push:
    tags:
      - "v*"
    branches:
      - main

permissions:
  contents: write

jobs:
  pc-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Install uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86
        with:
          enable-cache: true
      
      - name: Set up Python versions
        run: uv python install
    
      - name: Install dependencies
        run: uv sync --locked --group build

      - name: Create output directory
        run: mkdir dist_out/
        
      # - name: Build binary with pyside6-deploy
      #   run: uv run pyside6-deploy -v -c pysidedeploy.spec

      - name: Fake Build
        run: uv run python makebin.py
      
      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pyside6-deploy-binaries-${{ matrix.os }}
          path: |
            dist_out
  latest-upload:
    runs-on: ubuntu-latest
    needs: pc-build
    permissions: write-all
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Delete Previous Latest Release
        run: gh release delete latest --yes

      - name: Download Release Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist_out
          pattern: pyside6-deploy-binaries-*
          merge-multiple: true

      - name: Upload Release Assets (Latest)
        uses: softprops/action-gh-release@v2
        with:
          files: dist_out/*
          tag_name: latest
          name: Latest Build
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  tag-upload:
    runs-on: ubuntu-latest
    needs: pc-build
    permissions: write-all
    if: github.ref_type == 'tag'

    steps:
      - name: Download Release Artifacts
        uses: actions/download-artifact@v4
        with:
          name: pyside6-deploy-binaries

      - name: Upload Release Assets (Tag)
        uses: softprops/action-gh-release@v2
        with:
          files: dist_out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
